/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// import * as flsFunctions from \"./modules/functions.js\";\r\n\r\n// flsFunctions.isWebp();\r\n\r\nlet currentActivity = ''\r\n\r\nconst calc = document.querySelector('.calculator-project')\r\nlet currentNum = calc.querySelector('.calculation')\r\nlet currentSum = calc.querySelector('.sum')\r\nlet procents = calc.querySelector('.procent-btn')\r\nlet clearbtn = calc.querySelector('.clear-btn')\r\nlet switchBtn = calc.querySelector('.swch-btn')\r\nconst sumbtn = calc.querySelector('.sum-btn')\r\nlet btnArr = calc.querySelectorAll('.val-btn')\r\nbtnArr.forEach(item => {\r\n    item.addEventListener('click',() => {\r\n        currentNum.value += item.value\r\n    })\r\n})\r\nprocents.addEventListener('click',() => {\r\n    currentNum.classList.contains('show') ? currentSum.innerText =  eval(currentNum.value)/100 :  currentNum.value = currentNum.value/100\r\n})\r\nswitchBtn.addEventListener('click', () => {\r\n    currentNum.value = '-' + currentNum.value\r\n})\r\nsumbtn.addEventListener('click', ()=> {\r\n    // currentNum.value = eval(currentNum.value)\r\n    currentNum.classList.add('show')\r\n    currentSum.innerText =  eval(currentNum.value)\r\n})\r\nclearbtn.addEventListener('click', () => {\r\n    currentNum.value = \"\"\r\n    currentSum.innerText = ''\r\n    currentNum.classList.contains('show') ?  currentNum.classList.remove('show') : ''\r\n})\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;